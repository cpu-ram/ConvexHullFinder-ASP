{"ast":null,"code":"var _jsxFileName = \"/Users/petrstepanenko/Projects/ConvexHullFinder_ASP/ConvexHullFinder_ASP/ClientApp/src/components/ConvexHullFinderInterface.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ConvexHullFinderInterface() {\n  _s();\n\n  const [pointsEntered, setPointsEntered] = useState([]);\n  const [convexHull, setConvexHull] = useState([]);\n  const [currentStatus, setCurrentStatus] = useState(\"enteringPoints\");\n\n  function PointsEntered(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pointsEntered.map((point, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: point.x,\n        cy: point.y,\n        r: \"5\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 55\n      }, this))\n    }, void 0, false);\n  }\n\n  function ConvexHull(props) {\n    const polygonPointsString = convexHull.map(point => point.x + \",\" + point.y + \" \");\n    console.log(polygonPointsString);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: \"200,10 250,190 160,210\",\n        style: {\n          fill: \"none\",\n          stroke: \"green\",\n          strokeWidth: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  function BoardContents(props) {\n    let currentStatus = props.currentStatus;\n\n    if (currentStatus == \"enteringPoints\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(PointsEntered, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } else if (currentStatus == \"displayingConvexHull\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(PointsEntered, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ConvexHull, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    } else throw new DOMException();\n  }\n\n  function Buttons(props) {\n    let currentStatus = props.currentStatus;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [currentStatus == \"enteringPoints\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: findConvexHull,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearBoard,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n  function clearBoard() {\n    setPointsEntered([]);\n    setConvexHull([]);\n    setCurrentStatus(\"enteringPoints\");\n  }\n\n  function handleClick(e) {\n    if (currentStatus != \"enteringPoints\") return;\n    let enteredViewPortCoordinates = {\n      x: e.clientX,\n      y: e.clientY\n    };\n    let boardPosition = document.querySelector('#board').getBoundingClientRect();\n    let boardRelativeClickCoordinates = {\n      x: enteredViewPortCoordinates.x - boardPosition.left,\n      y: enteredViewPortCoordinates.y - boardPosition.top\n    };\n    setPointsEntered([...pointsEntered, boardRelativeClickCoordinates]);\n  }\n\n  async function findConvexHull() {\n    const points = JSON.stringify(pointsEntered);\n    console.log(\"points entered:\" + points);\n    const response = await fetch('findconvexhull', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: points\n    });\n    const data = await response;\n    const convexHullJson = await data.text();\n    console.log(\"Convex hull found:\" + convexHullJson);\n    setCurrentStatus(\"displayingConvexHull\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"entryBoard\",\n      style: {\n        display: \"block\",\n        boxSizing: \"border-box\",\n        width: \"530px\",\n        height: \"530px\",\n        margin: \"0\",\n        paddingTop: \"15px\",\n        paddingRight: \"15px\",\n        paddingLeft: \"15px\",\n        paddingBottom: \"15px\",\n        outline: \"1px solid red\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"board\",\n        onClick: handleClick,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"500px\",\n        height: \"500px\",\n        style: {\n          display: \"block\",\n          margin: \"0\",\n          boxSizing: \"content-box\",\n          padding: \"0\",\n          outline: \"1px solid blue\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BoardContents, {\n          currentStatus: currentStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      currentStatus: currentStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ConvexHullFinderInterface, \"UvqvyzWhn2upSF3x0vRQA+aSV6c=\");\n\n_c = ConvexHullFinderInterface;\nexport default ConvexHullFinderInterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConvexHullFinderInterface\");","map":{"version":3,"names":["React","Component","useEffect","useState","ConvexHullFinderInterface","pointsEntered","setPointsEntered","convexHull","setConvexHull","currentStatus","setCurrentStatus","PointsEntered","props","map","point","index","x","y","ConvexHull","polygonPointsString","console","log","fill","stroke","strokeWidth","BoardContents","DOMException","Buttons","findConvexHull","clearBoard","handleClick","e","enteredViewPortCoordinates","clientX","clientY","boardPosition","document","querySelector","getBoundingClientRect","boardRelativeClickCoordinates","left","top","points","JSON","stringify","response","fetch","method","headers","body","data","convexHullJson","text","display","boxSizing","width","height","margin","paddingTop","paddingRight","paddingLeft","paddingBottom","outline","padding"],"sources":["/Users/petrstepanenko/Projects/ConvexHullFinder_ASP/ConvexHullFinder_ASP/ClientApp/src/components/ConvexHullFinderInterface.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { useEffect, useState } from 'react';\n\nfunction ConvexHullFinderInterface() {\n    const [pointsEntered, setPointsEntered] = useState([]);\n    const [convexHull, setConvexHull] = useState([]);\n    const [currentStatus, setCurrentStatus] = useState(\"enteringPoints\");\n\n    function PointsEntered(props) {\n        return (\n            <>\n                {pointsEntered.map((point, index) => (<circle key={index} cx={point.x} cy={point.y} r='5' />))}\n            </>\n        )\n    }\n    function ConvexHull(props) {\n        const polygonPointsString = convexHull.map((point) => point.x + \",\" + point.y + \" \");\n        console.log(polygonPointsString);\n        return (\n            <>\n                <polygon points=\n                    \"200,10 250,190 160,210\"\n                        style={{fill: \"none\", stroke:\"green\", strokeWidth:1}} />\n            </>\n        )\n    }\n    function BoardContents(props) {\n        let currentStatus = props.currentStatus;\n        if (currentStatus == \"enteringPoints\") {\n            return (\n                <>\n                    <PointsEntered></PointsEntered>\n                </>\n            );\n        }\n        else if (currentStatus == \"displayingConvexHull\") {\n            return (\n                <>\n                    <PointsEntered></PointsEntered>\n                    <ConvexHull></ConvexHull>\n                </>\n            );\n        }\n        else throw new DOMException();\n\n    }\n    function Buttons(props) {\n        let currentStatus = props.currentStatus;\n\n            return (\n                <>\n                    {currentStatus == \"enteringPoints\" &&\n                        <button onClick={findConvexHull}>Submit</button>}\n                    <button onClick={clearBoard}>Clear</button>\n                </>\n            )\n        \n    }\n\n    function clearBoard() {\n        setPointsEntered([]);\n        setConvexHull([]);\n        setCurrentStatus(\"enteringPoints\");\n    }\n\n    function handleClick(e) {\n        if (currentStatus != \"enteringPoints\") return;\n\n        let enteredViewPortCoordinates = { x: e.clientX, y: e.clientY };\n        let boardPosition = document.querySelector('#board').getBoundingClientRect();\n        let boardRelativeClickCoordinates = {\n            x: enteredViewPortCoordinates.x - boardPosition.left,\n            y: enteredViewPortCoordinates.y - boardPosition.top\n        }\n        setPointsEntered([...pointsEntered, boardRelativeClickCoordinates]);\n    }\n\n    async function findConvexHull() {\n        const points = JSON.stringify(pointsEntered);\n        console.log(\"points entered:\" + points);\n\n\n        const response = await fetch('findconvexhull', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: points\n        });\n        const data = await response;\n        const convexHullJson = await data.text();\n        console.log(\"Convex hull found:\" + convexHullJson);\n        setCurrentStatus(\"displayingConvexHull\");\n    }\n\n\n    return (\n        <>\n            <div id=\"entryBoard\" style={{\n                display: \"block\", boxSizing: \"border-box\", width: \"530px\", height: \"530px\",\n                margin: \"0\", paddingTop: \"15px\", paddingRight: \"15px\",\n                paddingLeft: \"15px\", paddingBottom: \"15px\", outline: \"1px solid red\"\n            }}>\n                <svg id=\"board\" onClick={handleClick}\n                    xmlns=\"http://www.w3.org/2000/svg\" width=\"500px\" height=\"500px\"\n                        style={{\n                            display: \"block\", margin: \"0\",\n                            boxSizing: \"content-box\", padding: \"0\", outline: \"1px solid blue\"\n                        }}>\n                    <BoardContents currentStatus={currentStatus} ></BoardContents>\n                    \n                </svg>\n            </div>\n\n            <Buttons currentStatus={currentStatus}></Buttons>\n\n        </>\n    );\n}\n\nexport default ConvexHullFinderInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}