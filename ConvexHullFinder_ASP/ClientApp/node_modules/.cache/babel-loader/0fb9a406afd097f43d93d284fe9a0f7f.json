{"ast":null,"code":"var _jsxFileName = \"/Users/petrstepanenko/Projects/ConvexHullFinder_ASP/ConvexHullFinder_ASP/ClientApp/src/components/ConvexHullFinderInterface.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ConvexHullFinderInterface() {\n  _s();\n\n  const [pointsEntered, setPointsEntered] = useState([]);\n  const [stash, setStash] = useState([]);\n  const [convexHull, setConvexHull] = useState([]);\n  const [currentStatus, setCurrentStatus] = useState(\"enteringPoints\");\n  const [polygons, setPolygons] = useState([[]]);\n  const [mousePos, setMousePos] = useState({});\n\n  function PointsEntered(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pointsEntered.map((point, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: point.x,\n        cy: point.y,\n        r: \"5\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 55\n      }, this))\n    }, void 0, false);\n  }\n\n  function ConvexHull(props) {\n    const polygonPointsString = convexHull.map(point => point.x + \",\" + point.y + \" \").reduce((a, b) => a.concat(b));\n    console.log(polygonPointsString);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: polygonPointsString,\n        style: {\n          fill: \"none\",\n          stroke: \"green\",\n          strokeWidth: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  function Polygons(props) {\n    const result = polygons.map(polygon => Polygon(polygon)).reduce((a, b) => a.concat(b));\n    return result;\n  }\n\n  function Polygon(points) {\n    const polygonPointsString = points.map(point => point.x + \",\" + point.y + \" \").reduce((a, b) => a.concat(b));\n    console.log(polygonPointsString);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n        points: polygonPointsString,\n        style: {\n          fill: \"none\",\n          stroke: \"green\",\n          strokeWidth: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  function CreatePolygon(jsonString) {\n    const pointsArray = JSON.parse(jsonString);\n    const polygon = Polygon(pointsArray);\n    return polygon;\n  }\n\n  function BoardContents(props) {\n    let currentStatus = props.currentStatus;\n    const result = '';\n    result.concat( /*#__PURE__*/_jsxDEV(PointsEntered, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }, this));\n\n    if (currentStatus == \"displayingConvexHull\") {\n      result.concat( /*#__PURE__*/_jsxDEV(ConvexHull, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"result\"\n    }, void 0, false);\n  }\n\n  function Buttons(props) {\n    let currentStatus = props.currentStatus;\n    let stash = props.stash;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [currentStatus == \"enteringPoints\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: findConvexHull,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearBoard,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stashUp,\n        children: \"Stash points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), stash.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: popStash,\n        children: \"Pop stash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true);\n  }\n\n  function clearBoard() {\n    setPointsEntered([]);\n    setConvexHull([]);\n    setCurrentStatus(\"enteringPoints\");\n  }\n\n  function stashUp() {\n    setStash(pointsEntered);\n  }\n\n  function popStash() {\n    if (stash == []) {\n      throw new DOMException();\n    }\n\n    setPointsEntered(stash);\n    setStash([]);\n  }\n\n  function handleClick(e) {\n    if (currentStatus != \"enteringPoints\") return;\n    let enteredViewPortCoordinates = {\n      x: e.clientX,\n      y: e.clientY\n    };\n    let boardPosition = document.querySelector('#board').getBoundingClientRect();\n    let boardRelativeClickCoordinates = {\n      x: enteredViewPortCoordinates.x - boardPosition.left,\n      y: enteredViewPortCoordinates.y - boardPosition.top\n    };\n    setPointsEntered([...pointsEntered, boardRelativeClickCoordinates]);\n  }\n\n  useEffect(() => {\n    const handleMouseMove = e => {\n      let enteredViewPortCoordinates = {\n        x: e.clientX,\n        y: e.clientY\n      };\n      let boardPosition = document.querySelector('#board').getBoundingClientRect();\n      let boardRelativeMouseCoordinates = {\n        x: enteredViewPortCoordinates.x - boardPosition.left,\n        y: enteredViewPortCoordinates.y - boardPosition.top\n      };\n      setMousePos({\n        x: boardRelativeMouseCoordinates.x,\n        y: boardRelativeMouseCoordinates.y\n      });\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n\n  async function findConvexHull() {\n    const points = JSON.stringify(pointsEntered);\n    console.log(\"points entered:\" + points);\n    const response = await fetch('findconvexhull', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: points\n    });\n    const data = await response;\n    const convexHullJson = await data.text();\n    const convexHullReturned = JSON.parse(convexHullJson);\n    setConvexHull(convexHullReturned);\n    console.log(\"Convex hull found:\" + convexHullJson);\n    setCurrentStatus(\"displayingConvexHull\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"entryBoard\",\n      style: {\n        display: \"block\",\n        boxSizing: \"border-box\",\n        width: \"530px\",\n        height: \"530px\",\n        margin: \"0\",\n        paddingTop: \"15px\",\n        paddingRight: \"15px\",\n        paddingLeft: \"15px\",\n        paddingBottom: \"15px\",\n        outline: \"1px solid red\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"board\",\n        onClick: handleClick,\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"500px\",\n        height: \"500px\",\n        style: {\n          display: \"block\",\n          margin: \"0\",\n          boxSizing: \"content-box\",\n          padding: \"0\",\n          outline: \"1px solid blue\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BoardContents, {\n          currentStatus: currentStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"The mouse is at position\", ' ', /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"(\", mousePos.x, \", \", mousePos.y, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      stash: stash,\n      currentStatus: currentStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ConvexHullFinderInterface, \"loDRVGTjlU52VMFhmEY3mflgsac=\");\n\n_c = ConvexHullFinderInterface;\nexport default ConvexHullFinderInterface;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConvexHullFinderInterface\");","map":{"version":3,"names":["React","Component","useEffect","useState","ConvexHullFinderInterface","pointsEntered","setPointsEntered","stash","setStash","convexHull","setConvexHull","currentStatus","setCurrentStatus","polygons","setPolygons","mousePos","setMousePos","PointsEntered","props","map","point","index","x","y","ConvexHull","polygonPointsString","reduce","a","b","concat","console","log","fill","stroke","strokeWidth","Polygons","result","polygon","Polygon","points","CreatePolygon","jsonString","pointsArray","JSON","parse","BoardContents","Buttons","findConvexHull","clearBoard","stashUp","length","popStash","DOMException","handleClick","e","enteredViewPortCoordinates","clientX","clientY","boardPosition","document","querySelector","getBoundingClientRect","boardRelativeClickCoordinates","left","top","handleMouseMove","boardRelativeMouseCoordinates","window","addEventListener","removeEventListener","stringify","response","fetch","method","headers","body","data","convexHullJson","text","convexHullReturned","display","boxSizing","width","height","margin","paddingTop","paddingRight","paddingLeft","paddingBottom","outline","padding"],"sources":["/Users/petrstepanenko/Projects/ConvexHullFinder_ASP/ConvexHullFinder_ASP/ClientApp/src/components/ConvexHullFinderInterface.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { useEffect, useState } from 'react';\n\nfunction ConvexHullFinderInterface() {\n    const [pointsEntered, setPointsEntered] = useState([]);\n    const [stash, setStash] = useState([]);\n    const [convexHull, setConvexHull] = useState([]);\n    const [currentStatus, setCurrentStatus] = useState(\"enteringPoints\");\n    const [polygons, setPolygons] = useState([[]]);\n    const [mousePos, setMousePos] = useState({});\n\n    function PointsEntered(props) {\n        return (\n            <>\n                {pointsEntered.map((point, index) => (<circle key={index} cx={point.x} cy={point.y} r='5' />))}\n            </>\n        )\n    }\n    function ConvexHull(props) {\n        const polygonPointsString =\n            convexHull.map((point) => point.x + \",\" + point.y + \" \")\n                .reduce((a,b)=>a.concat(b));\n        console.log(polygonPointsString);\n        return (\n            <>\n                <polygon points=\n                    {polygonPointsString}\n                        style={{fill: \"none\", stroke:\"green\", strokeWidth:1}} />\n            </>\n        )\n    }\n    function Polygons(props) {\n        const result = polygons.map((polygon) => Polygon(polygon)).reduce((a, b) => a.concat(b));\n        return result;\n    }\n    function Polygon(points) {\n        const polygonPointsString =\n            points.map((point) => point.x + \",\" + point.y + \" \")\n                .reduce((a, b) => a.concat(b));\n        console.log(polygonPointsString);\n        return (\n            <>\n                <polygon points=\n                    {polygonPointsString}\n                    style={{ fill: \"none\", stroke: \"green\", strokeWidth: 1 }} />\n            </>\n        )\n    }\n    function CreatePolygon(jsonString) {\n        const pointsArray = JSON.parse(jsonString);\n        const polygon = Polygon(pointsArray);\n        return polygon;\n    }\n\n    function BoardContents(props)\n    {\n        let currentStatus = props.currentStatus;\n        const result = '';\n\n\n        result.concat(<PointsEntered></PointsEntered>);\n        if (currentStatus == \"displayingConvexHull\")\n        {\n            result.concat(<ConvexHull></ConvexHull>);\n        }\n\n        return <>result</>;\n\n    }\n    function Buttons(props) {\n        let currentStatus = props.currentStatus;\n        let stash = props.stash;\n            return (\n                <>\n                    {currentStatus == \"enteringPoints\" &&\n                        <button onClick={findConvexHull}>Submit</button>}\n                    <button onClick={clearBoard}>Clear</button>\n                    <button onClick={stashUp}>Stash points</button>\n                    {stash.length>0 &&\n                        <button onClick={popStash}>Pop stash</button>}\n                </>\n            )\n        \n    }\n\n    function clearBoard() {\n        setPointsEntered([]);\n        setConvexHull([]);\n        setCurrentStatus(\"enteringPoints\");\n    }\n    function stashUp() {\n        setStash(pointsEntered);\n    }\n    function popStash() {\n        if (stash == []) {\n            throw new DOMException();\n        }\n        setPointsEntered(stash);\n        setStash([]);\n    }\n\n    function handleClick(e) {\n        if (currentStatus != \"enteringPoints\") return;\n\n        let enteredViewPortCoordinates = { x: e.clientX, y: e.clientY };\n        let boardPosition = document.querySelector('#board').getBoundingClientRect();\n        let boardRelativeClickCoordinates = {\n            x: enteredViewPortCoordinates.x - boardPosition.left,\n            y: enteredViewPortCoordinates.y - boardPosition.top\n        }\n        setPointsEntered([...pointsEntered, boardRelativeClickCoordinates]);\n    }\n\n    useEffect(() => {\n        const handleMouseMove = (e) => {\n            let enteredViewPortCoordinates = { x: e.clientX, y: e.clientY };\n            let boardPosition = document.querySelector('#board').getBoundingClientRect();\n            let boardRelativeMouseCoordinates = {\n                x: enteredViewPortCoordinates.x - boardPosition.left,\n                y: enteredViewPortCoordinates.y - boardPosition.top\n            }\n\n            setMousePos({ x: boardRelativeMouseCoordinates.x, y: boardRelativeMouseCoordinates.y });\n        };\n\n        window.addEventListener('mousemove', handleMouseMove);\n\n        return () => {\n            window.removeEventListener(\n                'mousemove',\n                handleMouseMove\n            );\n        };\n    }, []);\n\n    async function findConvexHull() {\n        const points = JSON.stringify(pointsEntered);\n        console.log(\"points entered:\" + points);\n\n\n        const response = await fetch('findconvexhull', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: points\n        });\n        const data = await response;\n        const convexHullJson = await data.text();\n        const convexHullReturned = JSON.parse(convexHullJson);\n        setConvexHull(convexHullReturned);\n\n        console.log(\"Convex hull found:\" + convexHullJson);\n        setCurrentStatus(\"displayingConvexHull\");\n    }\n\n\n    return (\n        <>\n            <div id=\"entryBoard\" style={{\n                display: \"block\", boxSizing: \"border-box\", width: \"530px\", height: \"530px\",\n                margin: \"0\", paddingTop: \"15px\", paddingRight: \"15px\",\n                paddingLeft: \"15px\", paddingBottom: \"15px\", outline: \"1px solid red\"\n            }}>\n                <svg id=\"board\" onClick={handleClick}\n                    xmlns=\"http://www.w3.org/2000/svg\" width=\"500px\" height=\"500px\"\n                        style={{\n                            display: \"block\", margin: \"0\",\n                            boxSizing: \"content-box\", padding: \"0\", outline: \"1px solid blue\"\n                        }}>\n                    <BoardContents currentStatus={currentStatus} ></BoardContents>\n                    \n                </svg>\n            </div>\n            <div>\n                The mouse is at position{' '}\n                <b>\n                    ({mousePos.x}, {mousePos.y})\n                </b>\n            </div>\n            <Buttons stash={stash} currentStatus={currentStatus}></Buttons>\n\n        </>\n    );\n}\n\nexport default ConvexHullFinderInterface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}